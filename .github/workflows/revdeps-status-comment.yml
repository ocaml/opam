name: Revdeps status comment

on:
  workflow_run:
    workflows: ["Main workflow"]
    types:
      - completed

permissions:
  pull-requests: write
  issues: write
  contents: read

jobs:
  comment:
    runs-on: ubuntu-latest
    if: github.event.workflow_run.event == 'pull_request'
    steps:
    - name: Download artifacts
      uses: actions/github-script@v7
      with:
        script: |
          const artifacts = await github.rest.actions.listWorkflowRunArtifacts({
            owner: context.repo.owner,
            repo: context.repo.repo,
            run_id: context.payload.workflow_run.id,
          });
          
          for (const artifact of artifacts.data.artifacts) {
            if (artifact.name.startsWith('pr-comment-')) {
              const download = await github.rest.actions.downloadArtifact({
                owner: context.repo.owner,
                repo: context.repo.repo,
                artifact_id: artifact.id,
                archive_format: 'zip',
              });
              
              const fs = require('fs');
              fs.writeFileSync(`${artifact.name}.zip`, Buffer.from(download.data));
            }
          }
          
    - name: Extract and post comments
      run: |
        for file in pr-comment-*.zip; do
          if [ -f "$file" ]; then
            unzip -q "$file"
            if [ -f comment.txt ] && [ -f pr_number.txt ]; then
              echo "PR_NUMBER=$(cat pr_number.txt)" >> $GITHUB_ENV
              echo "COMMENT_BODY<<EOF" >> $GITHUB_ENV
              cat comment.txt >> $GITHUB_ENV
              echo "EOF" >> $GITHUB_ENV
            fi
          fi
        done
        
    - name: Post comment
      if: env.PR_NUMBER != ''
      uses: actions/github-script@v7
      with:
        script: |
          const prNumber = process.env.PR_NUMBER;
          const commentBody = process.env.COMMENT_BODY;
          const marker = commentBody.split('\n')[0];
  
          if (!marker.startsWith('<!--') || !commentBody) return;

          const comments = await github.rest.issues.listComments({
            owner: context.repo.owner,
            repo: context.repo.repo,
            issue_number: prNumber
          });

          const existing = comments.data.find(c => c.body.startsWith(marker));

          if (existing) {
            await github.rest.issues.updateComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              comment_id: existing.id,
              body: commentBody
            });
          } else {
            await github.rest.issues.createComment({
              issue_number: prNumber,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: commentBody
            });
          }
